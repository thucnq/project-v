// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: insert_ticket_notification.sql

package sqlc

import (
	"context"
	"database/sql"
)

const createTicketNotification = `-- name: CreateTicketNotification :execresult
INSERT INTO ticket_notifications (
	workspace_id,
	id,

	is_published,
	created_by,
	updated_by,

	created_request_value,
	created_request_participant_value,
	created_request_participant_ref,

	updated_asignee_value,
	updated_asignee_participant_value,
	updated_asignee_participant_ref,

	updated_ticket_value,
	updated_ticket_participant_value,
	updated_ticket_participant_ref,

	updated_workflow_value,
	updated_workflow_participant_value,
	updated_workflow_participant_ref,

	updated_status_step_value,
	updated_status_step_participant_value,
	updated_status_step_participant_ref,

	updated_comment_value,
	updated_comment_participant_value,
	updated_comment_participant_ref,

	updated_follower_or_supporter_value,
	updated_follower_or_supporter_participant_value,
	updated_follower_or_supporter_participant_ref,

	updated_rating_service_value,
	updated_rating_service_participant_value,
	updated_rating_service_participant_ref,

	almost_expired_first_response_value,
	almost_expired_first_response_participant_value,
	almost_expired_first_response_participant_ref,

	almost_expired_process_ticket_value,
	almost_expired_process_ticket_participant_value,
	almost_expired_process_ticket_participant_ref,

	expired_first_response_value,
	expired_first_response_participant_value,
	expired_first_response_participant_ref,

	expired_process_ticket_value,
	expired_process_ticket_participant_value,
	expired_process_ticket_participant_ref,

	version
)
VALUES (
	?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?
)
`

type CreateTicketNotificationParams struct {
	WorkspaceID                                string
	ID                                         int64
	IsPublished                                bool
	CreatedBy                                  int64
	UpdatedBy                                  int64
	CreatedRequestValue                        int32
	CreatedRequestParticipantValue             int32
	CreatedRequestParticipantRef               int64
	UpdatedAsigneeValue                        int32
	UpdatedAsigneeParticipantValue             int32
	UpdatedAsigneeParticipantRef               int64
	UpdatedTicketValue                         int32
	UpdatedTicketParticipantValue              int32
	UpdatedTicketParticipantRef                int64
	UpdatedWorkflowValue                       int32
	UpdatedWorkflowParticipantValue            int32
	UpdatedWorkflowParticipantRef              int64
	UpdatedStatusStepValue                     int32
	UpdatedStatusStepParticipantValue          int32
	UpdatedStatusStepParticipantRef            int64
	UpdatedCommentValue                        int32
	UpdatedCommentParticipantValue             int32
	UpdatedCommentParticipantRef               int64
	UpdatedFollowerOrSupporterValue            int32
	UpdatedFollowerOrSupporterParticipantValue int32
	UpdatedFollowerOrSupporterParticipantRef   int64
	UpdatedRatingServiceValue                  int32
	UpdatedRatingServiceParticipantValue       int32
	UpdatedRatingServiceParticipantRef         int64
	AlmostExpiredFirstResponseValue            int32
	AlmostExpiredFirstResponseParticipantValue int32
	AlmostExpiredFirstResponseParticipantRef   int64
	AlmostExpiredProcessTicketValue            int32
	AlmostExpiredProcessTicketParticipantValue int32
	AlmostExpiredProcessTicketParticipantRef   int64
	ExpiredFirstResponseValue                  int32
	ExpiredFirstResponseParticipantValue       int32
	ExpiredFirstResponseParticipantRef         int64
	ExpiredProcessTicketValue                  int32
	ExpiredProcessTicketParticipantValue       int32
	ExpiredProcessTicketParticipantRef         int64
	Version                                    int32
}

func (q *Queries) CreateTicketNotification(ctx context.Context, arg CreateTicketNotificationParams) (sql.Result, error) {
	return q.exec(ctx, q.createTicketNotificationStmt, createTicketNotification,
		arg.WorkspaceID,
		arg.ID,
		arg.IsPublished,
		arg.CreatedBy,
		arg.UpdatedBy,
		arg.CreatedRequestValue,
		arg.CreatedRequestParticipantValue,
		arg.CreatedRequestParticipantRef,
		arg.UpdatedAsigneeValue,
		arg.UpdatedAsigneeParticipantValue,
		arg.UpdatedAsigneeParticipantRef,
		arg.UpdatedTicketValue,
		arg.UpdatedTicketParticipantValue,
		arg.UpdatedTicketParticipantRef,
		arg.UpdatedWorkflowValue,
		arg.UpdatedWorkflowParticipantValue,
		arg.UpdatedWorkflowParticipantRef,
		arg.UpdatedStatusStepValue,
		arg.UpdatedStatusStepParticipantValue,
		arg.UpdatedStatusStepParticipantRef,
		arg.UpdatedCommentValue,
		arg.UpdatedCommentParticipantValue,
		arg.UpdatedCommentParticipantRef,
		arg.UpdatedFollowerOrSupporterValue,
		arg.UpdatedFollowerOrSupporterParticipantValue,
		arg.UpdatedFollowerOrSupporterParticipantRef,
		arg.UpdatedRatingServiceValue,
		arg.UpdatedRatingServiceParticipantValue,
		arg.UpdatedRatingServiceParticipantRef,
		arg.AlmostExpiredFirstResponseValue,
		arg.AlmostExpiredFirstResponseParticipantValue,
		arg.AlmostExpiredFirstResponseParticipantRef,
		arg.AlmostExpiredProcessTicketValue,
		arg.AlmostExpiredProcessTicketParticipantValue,
		arg.AlmostExpiredProcessTicketParticipantRef,
		arg.ExpiredFirstResponseValue,
		arg.ExpiredFirstResponseParticipantValue,
		arg.ExpiredFirstResponseParticipantRef,
		arg.ExpiredProcessTicketValue,
		arg.ExpiredProcessTicketParticipantValue,
		arg.ExpiredProcessTicketParticipantRef,
		arg.Version,
	)
}
