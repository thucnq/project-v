// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: read_date_off.sql

package sqlc

import (
	"context"
	"database/sql"
)

const getDateOffsByRange = `-- name: GetDateOffsByRange :many
SELECT workspace_id, shift_id, id, name, start_date, end_date, is_annual, created_at, updated_at
FROM date_offs
WHERE workspace_id = ?
  AND shift_id = ?
  AND end_date >= ?
  AND start_date <= ?
`

type GetDateOffsByRangeParams struct {
	WorkspaceID string
	ShiftID     int64
	EndDate     sql.NullTime
	StartDate   sql.NullTime
}

func (q *Queries) GetDateOffsByRange(ctx context.Context, arg GetDateOffsByRangeParams) ([]DateOff, error) {
	rows, err := q.query(ctx, q.getDateOffsByRangeStmt, getDateOffsByRange,
		arg.WorkspaceID,
		arg.ShiftID,
		arg.EndDate,
		arg.StartDate,
	)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []DateOff
	for rows.Next() {
		var i DateOff
		if err := rows.Scan(
			&i.WorkspaceID,
			&i.ShiftID,
			&i.ID,
			&i.Name,
			&i.StartDate,
			&i.EndDate,
			&i.IsAnnual,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getDateOffsByWorkspaceIDAndShiftID = `-- name: GetDateOffsByWorkspaceIDAndShiftID :many
SELECT workspace_id, shift_id, id, name, start_date, end_date, is_annual, created_at, updated_at
FROM date_offs
WHERE workspace_id = ?
  AND shift_id = ?
`

type GetDateOffsByWorkspaceIDAndShiftIDParams struct {
	WorkspaceID string
	ShiftID     int64
}

func (q *Queries) GetDateOffsByWorkspaceIDAndShiftID(ctx context.Context, arg GetDateOffsByWorkspaceIDAndShiftIDParams) ([]DateOff, error) {
	rows, err := q.query(ctx, q.getDateOffsByWorkspaceIDAndShiftIDStmt, getDateOffsByWorkspaceIDAndShiftID, arg.WorkspaceID, arg.ShiftID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []DateOff
	for rows.Next() {
		var i DateOff
		if err := rows.Scan(
			&i.WorkspaceID,
			&i.ShiftID,
			&i.ID,
			&i.Name,
			&i.StartDate,
			&i.EndDate,
			&i.IsAnnual,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
