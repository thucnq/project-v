// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: select_advance_setting_participants.sql

package sqlc

import (
	"context"
)

const getAdvanceSettingParticipants = `-- name: GetAdvanceSettingParticipants :many
SELECT created_at, updated_at, workspace_id, ref_id, participant_id, type
FROM advance_setting_participants
WHERE workspace_id=? AND ref_id=?
`

type GetAdvanceSettingParticipantsParams struct {
	WorkspaceID string
	RefID       int64
}

func (q *Queries) GetAdvanceSettingParticipants(ctx context.Context, arg GetAdvanceSettingParticipantsParams) ([]AdvanceSettingParticipant, error) {
	rows, err := q.query(ctx, q.getAdvanceSettingParticipantsStmt, getAdvanceSettingParticipants, arg.WorkspaceID, arg.RefID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []AdvanceSettingParticipant
	for rows.Next() {
		var i AdvanceSettingParticipant
		if err := rows.Scan(
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.WorkspaceID,
			&i.RefID,
			&i.ParticipantID,
			&i.Type,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
