// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: update_ticket_notification.sql

package sqlc

import (
	"context"
	"database/sql"
)

const updateTicketNotification = `-- name: UpdateTicketNotification :execresult
UPDATE ticket_notifications SET
	is_published=?,

	created_request_value=?,
	created_request_participant_value=?,

	updated_asignee_value=?,
	updated_asignee_participant_value=?,

	updated_ticket_value=?,
	updated_ticket_participant_value=?,

	updated_workflow_value=?,
	updated_workflow_participant_value=?,

	updated_status_step_value=?,
	updated_status_step_participant_value=?,

	updated_comment_value=?,
	updated_comment_participant_value=?,

	updated_follower_or_supporter_value=?,
	updated_follower_or_supporter_participant_value=?,

	updated_rating_service_value=?,
	updated_rating_service_participant_value=?,

	almost_expired_first_response_value=?,
	almost_expired_first_response_participant_value=?,

	almost_expired_process_ticket_value=?,
	almost_expired_process_ticket_participant_value=?,

	expired_first_response_value=?,
	expired_first_response_participant_value=?,

	expired_process_ticket_value=?,
	expired_process_ticket_participant_value=?,

	version=?,
	updated_by=?,
	updated_at=?
WHERE workspace_id=? AND id=?
`

type UpdateTicketNotificationParams struct {
	IsPublished                                bool
	CreatedRequestValue                        int32
	CreatedRequestParticipantValue             int32
	UpdatedAsigneeValue                        int32
	UpdatedAsigneeParticipantValue             int32
	UpdatedTicketValue                         int32
	UpdatedTicketParticipantValue              int32
	UpdatedWorkflowValue                       int32
	UpdatedWorkflowParticipantValue            int32
	UpdatedStatusStepValue                     int32
	UpdatedStatusStepParticipantValue          int32
	UpdatedCommentValue                        int32
	UpdatedCommentParticipantValue             int32
	UpdatedFollowerOrSupporterValue            int32
	UpdatedFollowerOrSupporterParticipantValue int32
	UpdatedRatingServiceValue                  int32
	UpdatedRatingServiceParticipantValue       int32
	AlmostExpiredFirstResponseValue            int32
	AlmostExpiredFirstResponseParticipantValue int32
	AlmostExpiredProcessTicketValue            int32
	AlmostExpiredProcessTicketParticipantValue int32
	ExpiredFirstResponseValue                  int32
	ExpiredFirstResponseParticipantValue       int32
	ExpiredProcessTicketValue                  int32
	ExpiredProcessTicketParticipantValue       int32
	Version                                    int32
	UpdatedBy                                  int64
	UpdatedAt                                  sql.NullTime
	WorkspaceID                                string
	ID                                         int64
}

func (q *Queries) UpdateTicketNotification(ctx context.Context, arg UpdateTicketNotificationParams) (sql.Result, error) {
	return q.exec(ctx, q.updateTicketNotificationStmt, updateTicketNotification,
		arg.IsPublished,
		arg.CreatedRequestValue,
		arg.CreatedRequestParticipantValue,
		arg.UpdatedAsigneeValue,
		arg.UpdatedAsigneeParticipantValue,
		arg.UpdatedTicketValue,
		arg.UpdatedTicketParticipantValue,
		arg.UpdatedWorkflowValue,
		arg.UpdatedWorkflowParticipantValue,
		arg.UpdatedStatusStepValue,
		arg.UpdatedStatusStepParticipantValue,
		arg.UpdatedCommentValue,
		arg.UpdatedCommentParticipantValue,
		arg.UpdatedFollowerOrSupporterValue,
		arg.UpdatedFollowerOrSupporterParticipantValue,
		arg.UpdatedRatingServiceValue,
		arg.UpdatedRatingServiceParticipantValue,
		arg.AlmostExpiredFirstResponseValue,
		arg.AlmostExpiredFirstResponseParticipantValue,
		arg.AlmostExpiredProcessTicketValue,
		arg.AlmostExpiredProcessTicketParticipantValue,
		arg.ExpiredFirstResponseValue,
		arg.ExpiredFirstResponseParticipantValue,
		arg.ExpiredProcessTicketValue,
		arg.ExpiredProcessTicketParticipantValue,
		arg.Version,
		arg.UpdatedBy,
		arg.UpdatedAt,
		arg.WorkspaceID,
		arg.ID,
	)
}
