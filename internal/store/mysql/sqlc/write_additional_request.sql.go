// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: write_additional_request.sql

package sqlc

import (
	"context"
	"database/sql"
	"encoding/json"
	"time"
)

const createAdditionalRequest = `-- name: CreateAdditionalRequest :execresult
INSERT INTO additional_requests (
    workspace_id, ticket_id, node_id, id, requester_id, target_id, content_need_add,
    response_to_requester, attached_files, status, created_at, updated_at
)
VALUES (
        ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?
)
`

type CreateAdditionalRequestParams struct {
	WorkspaceID         string
	TicketID            int64
	NodeID              int64
	ID                  int64
	RequesterID         int64
	TargetID            int64
	ContentNeedAdd      string
	ResponseToRequester string
	AttachedFiles       json.RawMessage
	Status              int8
	CreatedAt           time.Time
	UpdatedAt           time.Time
}

func (q *Queries) CreateAdditionalRequest(ctx context.Context, arg CreateAdditionalRequestParams) (sql.Result, error) {
	return q.exec(ctx, q.createAdditionalRequestStmt, createAdditionalRequest,
		arg.WorkspaceID,
		arg.TicketID,
		arg.NodeID,
		arg.ID,
		arg.RequesterID,
		arg.TargetID,
		arg.ContentNeedAdd,
		arg.ResponseToRequester,
		arg.AttachedFiles,
		arg.Status,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
}

const updateAdditionalRequest = `-- name: UpdateAdditionalRequest :execresult
UPDATE additional_requests
SET requester_id = ?, target_id = ?, content_need_add = ?,
    response_to_requester = ?, attached_files = ?, status = ?, updated_at = ?
WHERE workspace_id = ?
  AND ticket_id = ?
  AND node_id = ?
  AND id = ?
`

type UpdateAdditionalRequestParams struct {
	RequesterID         int64
	TargetID            int64
	ContentNeedAdd      string
	ResponseToRequester string
	AttachedFiles       json.RawMessage
	Status              int8
	UpdatedAt           time.Time
	WorkspaceID         string
	TicketID            int64
	NodeID              int64
	ID                  int64
}

func (q *Queries) UpdateAdditionalRequest(ctx context.Context, arg UpdateAdditionalRequestParams) (sql.Result, error) {
	return q.exec(ctx, q.updateAdditionalRequestStmt, updateAdditionalRequest,
		arg.RequesterID,
		arg.TargetID,
		arg.ContentNeedAdd,
		arg.ResponseToRequester,
		arg.AttachedFiles,
		arg.Status,
		arg.UpdatedAt,
		arg.WorkspaceID,
		arg.TicketID,
		arg.NodeID,
		arg.ID,
	)
}
