// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: write_date_off.sql

package sqlc

import (
	"context"
	"database/sql"
	"time"
)

const createDateOff = `-- name: CreateDateOff :execresult
INSERT INTO date_offs (
    id, shift_id, workspace_id, name, start_date, end_date, is_annual, created_at, updated_at
) VALUES (
    ?, ?, ?, ?, ?, ?, ?, ?, ?
)
`

type CreateDateOffParams struct {
	ID          int64
	ShiftID     int64
	WorkspaceID string
	Name        string
	StartDate   sql.NullTime
	EndDate     sql.NullTime
	IsAnnual    bool
	CreatedAt   time.Time
	UpdatedAt   time.Time
}

func (q *Queries) CreateDateOff(ctx context.Context, arg CreateDateOffParams) (sql.Result, error) {
	return q.exec(ctx, q.createDateOffStmt, createDateOff,
		arg.ID,
		arg.ShiftID,
		arg.WorkspaceID,
		arg.Name,
		arg.StartDate,
		arg.EndDate,
		arg.IsAnnual,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
}

const deleteDateOffsByWorkspaceIDAndShiftID = `-- name: DeleteDateOffsByWorkspaceIDAndShiftID :exec
DELETE
FROM date_offs
WHERE workspace_id = ?
  AND shift_id = ?
`

type DeleteDateOffsByWorkspaceIDAndShiftIDParams struct {
	WorkspaceID string
	ShiftID     int64
}

func (q *Queries) DeleteDateOffsByWorkspaceIDAndShiftID(ctx context.Context, arg DeleteDateOffsByWorkspaceIDAndShiftIDParams) error {
	_, err := q.exec(ctx, q.deleteDateOffsByWorkspaceIDAndShiftIDStmt, deleteDateOffsByWorkspaceIDAndShiftID, arg.WorkspaceID, arg.ShiftID)
	return err
}

const deleteDateOffsByWorkspaceIDAndShiftIDAndDateOffID = `-- name: DeleteDateOffsByWorkspaceIDAndShiftIDAndDateOffID :exec
DELETE
FROM date_offs
WHERE workspace_id = ?
  AND shift_id = ?
  AND id = ?
`

type DeleteDateOffsByWorkspaceIDAndShiftIDAndDateOffIDParams struct {
	WorkspaceID string
	ShiftID     int64
	ID          int64
}

func (q *Queries) DeleteDateOffsByWorkspaceIDAndShiftIDAndDateOffID(ctx context.Context, arg DeleteDateOffsByWorkspaceIDAndShiftIDAndDateOffIDParams) error {
	_, err := q.exec(ctx, q.deleteDateOffsByWorkspaceIDAndShiftIDAndDateOffIDStmt, deleteDateOffsByWorkspaceIDAndShiftIDAndDateOffID, arg.WorkspaceID, arg.ShiftID, arg.ID)
	return err
}
