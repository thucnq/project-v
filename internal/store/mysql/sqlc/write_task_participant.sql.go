// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: write_task_participant.sql

package sqlc

import (
	"context"
	"database/sql"
	"time"
)

const createTaskParticipant = `-- name: CreateTaskParticipant :execresult
INSERT INTO task_participants
(workspace_id, task_id, participant_id, role_type, participant_type, created_at, updated_at)
VALUES(?, ?, ?, ?, ?, ?, ?)
`

type CreateTaskParticipantParams struct {
	WorkspaceID     string
	TaskID          int64
	ParticipantID   string
	RoleType        int8
	ParticipantType int8
	CreatedAt       time.Time
	UpdatedAt       time.Time
}

func (q *Queries) CreateTaskParticipant(ctx context.Context, arg CreateTaskParticipantParams) (sql.Result, error) {
	return q.exec(ctx, q.createTaskParticipantStmt, createTaskParticipant,
		arg.WorkspaceID,
		arg.TaskID,
		arg.ParticipantID,
		arg.RoleType,
		arg.ParticipantType,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
}

const deleteTaskParticipant = `-- name: DeleteTaskParticipant :execresult
DELETE FROM task_participants
WHERE workspace_id = ?
  AND task_id = ?
  AND participant_id = ?
`

type DeleteTaskParticipantParams struct {
	WorkspaceID   string
	TaskID        int64
	ParticipantID string
}

func (q *Queries) DeleteTaskParticipant(ctx context.Context, arg DeleteTaskParticipantParams) (sql.Result, error) {
	return q.exec(ctx, q.deleteTaskParticipantStmt, deleteTaskParticipant, arg.WorkspaceID, arg.TaskID, arg.ParticipantID)
}

const deleteTaskParticipantByTaskID = `-- name: DeleteTaskParticipantByTaskID :execresult
DELETE FROM task_participants
WHERE workspace_id = ?
  AND task_id = ?
`

type DeleteTaskParticipantByTaskIDParams struct {
	WorkspaceID string
	TaskID      int64
}

func (q *Queries) DeleteTaskParticipantByTaskID(ctx context.Context, arg DeleteTaskParticipantByTaskIDParams) (sql.Result, error) {
	return q.exec(ctx, q.deleteTaskParticipantByTaskIDStmt, deleteTaskParticipantByTaskID, arg.WorkspaceID, arg.TaskID)
}
