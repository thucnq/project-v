// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: write_weekly_setting.sql

package sqlc

import (
	"context"
	"database/sql"
	"time"
)

const createWeeklySetting = `-- name: CreateWeeklySetting :execresult
INSERT INTO weekly_settings (
    id, shift_id, workspace_id, day_of_week, start, end, is_active, has_break_time, start_break, end_break, is_working_all_day, created_at, updated_at
) VALUES (
    ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?
)
`

type CreateWeeklySettingParams struct {
	ID              int64
	ShiftID         int64
	WorkspaceID     string
	DayOfWeek       int8
	Start           int16
	End             int16
	IsActive        bool
	HasBreakTime    bool
	StartBreak      sql.NullInt16
	EndBreak        sql.NullInt16
	IsWorkingAllDay bool
	CreatedAt       time.Time
	UpdatedAt       time.Time
}

func (q *Queries) CreateWeeklySetting(ctx context.Context, arg CreateWeeklySettingParams) (sql.Result, error) {
	return q.exec(ctx, q.createWeeklySettingStmt, createWeeklySetting,
		arg.ID,
		arg.ShiftID,
		arg.WorkspaceID,
		arg.DayOfWeek,
		arg.Start,
		arg.End,
		arg.IsActive,
		arg.HasBreakTime,
		arg.StartBreak,
		arg.EndBreak,
		arg.IsWorkingAllDay,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
}

const deleteWeeklySettingsByWorkspaceIDAndShiftID = `-- name: DeleteWeeklySettingsByWorkspaceIDAndShiftID :exec
DELETE
FROM weekly_settings
WHERE workspace_id = ?
  AND shift_id = ?
`

type DeleteWeeklySettingsByWorkspaceIDAndShiftIDParams struct {
	WorkspaceID string
	ShiftID     int64
}

func (q *Queries) DeleteWeeklySettingsByWorkspaceIDAndShiftID(ctx context.Context, arg DeleteWeeklySettingsByWorkspaceIDAndShiftIDParams) error {
	_, err := q.exec(ctx, q.deleteWeeklySettingsByWorkspaceIDAndShiftIDStmt, deleteWeeklySettingsByWorkspaceIDAndShiftID, arg.WorkspaceID, arg.ShiftID)
	return err
}
