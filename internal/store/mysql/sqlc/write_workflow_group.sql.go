// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: write_workflow_group.sql

package sqlc

import (
	"context"
	"database/sql"
	"time"
)

const createWorkflowGroup = `-- name: CreateWorkflowGroup :execresult
INSERT INTO workflow_groups
(workspace_id, parent_id, id, name, left_bower, right_bower, h_level)
VALUES(?, ?, ?, ?, ?, ?, ?)
`

type CreateWorkflowGroupParams struct {
	WorkspaceID string
	ParentID    int64
	ID          int64
	Name        string
	LeftBower   int16
	RightBower  int16
	HLevel      int16
}

func (q *Queries) CreateWorkflowGroup(ctx context.Context, arg CreateWorkflowGroupParams) (sql.Result, error) {
	return q.exec(ctx, q.createWorkflowGroupStmt, createWorkflowGroup,
		arg.WorkspaceID,
		arg.ParentID,
		arg.ID,
		arg.Name,
		arg.LeftBower,
		arg.RightBower,
		arg.HLevel,
	)
}

const deleteRange = `-- name: DeleteRange :execresult
CALL DeleteRange(?,?,?,?)
`

type DeleteRangeParams struct {
	WorkspaceId   string
	LeftBower     int16
	RightBower    int16
	WorkflowCount int16
}

func (q *Queries) DeleteRange(ctx context.Context, arg DeleteRangeParams) (sql.Result, error) {
	return q.exec(ctx, q.deleteRangeStmt, deleteRange,
		arg.WorkspaceId,
		arg.LeftBower,
		arg.RightBower,
		arg.WorkflowCount,
	)
}

const updateBowersBeforeAppend = `-- name: UpdateBowersBeforeAppend :execresult
CALL UpdateBowersBeforeAppend(?,?)
`

type UpdateBowersBeforeAppendParams struct {
	WorkspaceId      string
	ParentRightBower int16
}

func (q *Queries) UpdateBowersBeforeAppend(ctx context.Context, arg UpdateBowersBeforeAppendParams) (sql.Result, error) {
	return q.exec(ctx, q.updateBowersBeforeAppendStmt, updateBowersBeforeAppend, arg.WorkspaceId, arg.ParentRightBower)
}

const updateWorkflowGroup = `-- name: UpdateWorkflowGroup :execresult
UPDATE workflow_groups SET name=?, updated_at=?, version = version + 1 WHERE workspace_id = ? AND parent_id > 0 AND id = ?
`

type UpdateWorkflowGroupParams struct {
	Name        string
	UpdatedAt   time.Time
	WorkspaceID string
	ID          int64
}

func (q *Queries) UpdateWorkflowGroup(ctx context.Context, arg UpdateWorkflowGroupParams) (sql.Result, error) {
	return q.exec(ctx, q.updateWorkflowGroupStmt, updateWorkflowGroup,
		arg.Name,
		arg.UpdatedAt,
		arg.WorkspaceID,
		arg.ID,
	)
}
